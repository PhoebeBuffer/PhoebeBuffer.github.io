<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Phoebe</title>
  <icon>https://www.xding39.com/icon.png</icon>
  
  <link href="https://www.xding39.com/atom.xml" rel="self"/>
  
  <link href="https://www.xding39.com/"/>
  <updated>2021-05-12T04:25:58.873Z</updated>
  <id>https://www.xding39.com/</id>
  
  <author>
    <name>Phoebe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>并发编程</title>
    <link href="https://www.xding39.com/2021/05/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    <id>https://www.xding39.com/2021/05/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</id>
    <published>2021-05-12T04:07:52.000Z</published>
    <updated>2021-05-12T04:25:58.873Z</updated>
    
    
    <summary type="html">如果逻辑控制流在时间上重叠，那么它们就是并发的(concurrent) 。这种常见的现象称为并发(concurrency) ，出现在计算机系统的许多不同层面上。硬件异常处理程序、进程和Linux 信号处理程序都是大家很熟悉的例子。到目前为止，我们主要将并发看做是一种操作系统内核用来运行多个应用程序的机制。但是，并发不仅仅局限于内核。它也可以在应用程序中扮演重要角色。例如，我们已经看到Linux 信号处理程序如何允许应用响应异步事件，例如用户键入Ctrl+C ，或者程序访问虚拟内存的一个未定义的区域。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="并发" scheme="https://www.xding39.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>网络编程</title>
    <link href="https://www.xding39.com/2021/05/12/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    <id>https://www.xding39.com/2021/05/12/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</id>
    <published>2021-05-12T04:07:34.000Z</published>
    <updated>2021-05-12T04:25:23.962Z</updated>
    
    
    <summary type="html">网络应用随处可见。任何时候浏览Web 、发送email 信息或是玩在线游戏，你就正在使用网络应用程序。有趣的是，所有的网络应用都是基于相同的基本编程模型，有着相似的整体逻辑结构，并且依赖相同的编程接口。网络应用依赖于很多在系统研究中已经学习过的概念。例如，进程、信号、字节顺序、内存映射以及动态内存分配，都扮演着重要的角色。还有一些新概念要掌握。我们需要理解基本的客户端服务器编程模型，以及如何编写使用因特网提供的服务的客户端-服务器程序。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="网络编程" scheme="https://www.xding39.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>系统级IO</title>
    <link href="https://www.xding39.com/2021/05/12/%E7%B3%BB%E7%BB%9F%E7%BA%A7IO/"/>
    <id>https://www.xding39.com/2021/05/12/%E7%B3%BB%E7%BB%9F%E7%BA%A7IO/</id>
    <published>2021-05-12T04:07:24.000Z</published>
    <updated>2021-05-12T04:25:17.909Z</updated>
    
    
    <summary type="html">输入/输出（I/O）是在主存和外部设备(例如磁盘驱动器、终端和网络)之间复制数据的过程。输入操作是从（I/O）设备复制数据到主存，而输出操作是从主存复制数据到（I/O）设备。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="IO" scheme="https://www.xding39.com/tags/IO/"/>
    
  </entry>
  
  <entry>
    <title>虚拟内存</title>
    <link href="https://www.xding39.com/2021/05/12/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <id>https://www.xding39.com/2021/05/12/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</id>
    <published>2021-05-12T04:05:09.000Z</published>
    <updated>2021-05-12T04:25:06.648Z</updated>
    
    
    <summary type="html">为了更加有效地管理内存并且少出错，现代系统提供了一种对主存的抽象概念，叫做虚拟内存(VM) 。虚拟内存是硬件异常、硬件地址翻译、主存、磁盘文件和内核软件的完美交互，它为每个进程提供了一个大的、一致的和私有的地址空间。通过一个很清晰的机制，虚拟内存提供了三个重要的能力:1)它将主存看成是一个存储在磁盘上的地址空间的高速缓存，在主存中只保存活动区域，并根据需要在磁盘和主存之间来回传送数据，遇过这种方式，它高效地使用了主存。2) 它为每个进程提供了一致的地址空间，从而简化了内存管理。3) 它保护了每个进程的地址空间不被其他进程破坏。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="虚拟内存" scheme="https://www.xding39.com/tags/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>异常控制流</title>
    <link href="https://www.xding39.com/2021/05/12/%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E6%B5%81/"/>
    <id>https://www.xding39.com/2021/05/12/%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E6%B5%81/</id>
    <published>2021-05-12T04:01:51.000Z</published>
    <updated>2021-05-12T04:28:32.997Z</updated>
    
    
    <summary type="html">现代系统通过使控制流发生突变来对这些情况做出反应。一般而言，我们把这些突变称为异常控制流(ExceptionalControlFlow,ECF)。异常控制流发生在计算机系统的各个层次。比如，在硬件层，硬件检测到的事件会触发控制突然转移到异常处理程序。在操作系统层，内核通过上下文切换将控制从一个用户进程转移到另一个用户进程。在应用层，一个进程可以发送信号到另一个进程，而接收者会将控制突然转移到它的一个信号处理程序。一个程序可以通过回避通常的战规则，并执行到其他函数中任意位置的非本地跳转来对错误做出反应。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="ECF" scheme="https://www.xding39.com/tags/ECF/"/>
    
  </entry>
  
  <entry>
    <title>链接</title>
    <link href="https://www.xding39.com/2021/05/12/%E9%93%BE%E6%8E%A5/"/>
    <id>https://www.xding39.com/2021/05/12/%E9%93%BE%E6%8E%A5/</id>
    <published>2021-05-12T03:59:53.000Z</published>
    <updated>2021-05-12T04:25:30.217Z</updated>
    
    
    <summary type="html">链接(linking) 是将各种代码和数据片段收集并组合成为一个单一文件的过程，这个文件可被加载(复制)到内存并执行。链接可以执行于锅，译时(compile time) ，也就是在源代码被翻译成机器代码时;也可以执行于加载时Ooad time) ，也就是在程序被加载器(loader) 加载到内存并执行时;甚至执行于运行时(run time) ，也就是由应用程序来执行。在早期的计算机系统中，链接是手动执行的。在现代系统中，链接是由叫做链接器(linker) 的程序自动执行的。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="链接" scheme="https://www.xding39.com/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>存储器层次结构</title>
    <link href="https://www.xding39.com/2021/05/12/%E5%AD%98%E5%82%A8%E5%99%A8%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/"/>
    <id>https://www.xding39.com/2021/05/12/%E5%AD%98%E5%82%A8%E5%99%A8%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/</id>
    <published>2021-05-12T03:57:17.000Z</published>
    <updated>2021-05-12T04:25:41.838Z</updated>
    
    
    <summary type="html">存储器系统(memory system) 是一个具有不同容量、成本和访问时间的存储设备的层次结构。CPU 寄存器保存着最常用的数据。靠近CPU 的小的、快速的高速缓存存储器(cache memory) 作为一部分存储在相对慢速的主存储器(main memory) 中数据和指令的缓冲区域。主存缓存存储在容量较大的、慢速磁盘上的数据，而这些磁盘常常又作为存储在通过网络连接的其他机器的磁盘或磁带上的数据的缓冲区域。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="存储器" scheme="https://www.xding39.com/tags/%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>优化程序性能</title>
    <link href="https://www.xding39.com/2021/05/12/%E4%BC%98%E5%8C%96%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD/"/>
    <id>https://www.xding39.com/2021/05/12/%E4%BC%98%E5%8C%96%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD/</id>
    <published>2021-05-12T03:54:47.000Z</published>
    <updated>2021-05-12T03:56:51.582Z</updated>
    
    
    <summary type="html">编写高效程序需要做到以下几点:第一，我们必须选择一组适当的算法和数据结构。第二，我们必须编写出编译器能够有效优化以转换成高效可执行代码的源代码。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="优化程序" scheme="https://www.xding39.com/tags/%E4%BC%98%E5%8C%96%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>函数回调</title>
    <link href="https://www.xding39.com/2021/04/29/%E5%87%BD%E6%95%B0%E5%9B%9E%E8%B0%83/"/>
    <id>https://www.xding39.com/2021/04/29/%E5%87%BD%E6%95%B0%E5%9B%9E%E8%B0%83/</id>
    <published>2021-04-29T15:35:59.000Z</published>
    <updated>2021-04-29T15:38:08.613Z</updated>
    
    
    <summary type="html">回调函数就是一个通过函数指针调用的函数。如果你把函数的指针地址作为参数传递给另一个函数，当这个指针被用来调用其所指向的函数时，我们就说这是回调函数。</summary>
    
    
    
    <category term="C语言" scheme="https://www.xding39.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="函数回调" scheme="https://www.xding39.com/tags/%E5%87%BD%E6%95%B0%E5%9B%9E%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>处理器体系结构</title>
    <link href="https://www.xding39.com/2021/04/28/%E5%A4%84%E7%90%86%E5%99%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    <id>https://www.xding39.com/2021/04/28/%E5%A4%84%E7%90%86%E5%99%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</id>
    <published>2021-04-28T14:59:46.000Z</published>
    <updated>2021-04-28T15:01:55.678Z</updated>
    
    
    <summary type="html">现代微处理器可以称得上是人类创造出的最复杂的系统之一。一块手指甲大小的硅片上，可以容纳一个完整的高性能处理器、大的高速缓存，以及用来连接到外部设备的逻辑电路。。一个处理器支持的指令和指令的字节级编码称为它的指令集体系结构(Instruction-Set Architecture , ISA) 。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="处理器" scheme="https://www.xding39.com/tags/%E5%A4%84%E7%90%86%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>程序的机器级表示</title>
    <link href="https://www.xding39.com/2021/04/27/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/"/>
    <id>https://www.xding39.com/2021/04/27/%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</id>
    <published>2021-04-27T10:56:24.000Z</published>
    <updated>2021-04-27T11:01:06.858Z</updated>
    
    
    <summary type="html">计算机执行机器代码，用字节序列编码低级的操作，包括处理数据、管理内存、读写存储设备上的数据，以及利用网络通信。编译器基于编程语言的规则、目标机器的指令集和操作系统遵循的惯例，经过一系列的阶段生成机器代码。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="机器级代码" scheme="https://www.xding39.com/tags/%E6%9C%BA%E5%99%A8%E7%BA%A7%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>DSP_TMS320C66XX_DDR3配置</title>
    <link href="https://www.xding39.com/2021/04/26/DSP-TMS320C66XX-DDR3%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.xding39.com/2021/04/26/DSP-TMS320C66XX-DDR3%E9%85%8D%E7%BD%AE/</id>
    <published>2021-04-26T13:21:14.000Z</published>
    <updated>2021-04-26T13:23:23.071Z</updated>
    
    
    <summary type="html">DSP6657DDR3配置</summary>
    
    
    
    <category term="DSP" scheme="https://www.xding39.com/categories/DSP/"/>
    
    
    <category term="DDR3" scheme="https://www.xding39.com/tags/DDR3/"/>
    
  </entry>
  
  <entry>
    <title>Centos下yum本地源配置</title>
    <link href="https://www.xding39.com/2021/04/25/Centos%E4%B8%8Byum%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%88%9B%E5%BB%BA/"/>
    <id>https://www.xding39.com/2021/04/25/Centos%E4%B8%8Byum%E6%9C%AC%E5%9C%B0%E6%BA%90%E5%88%9B%E5%BB%BA/</id>
    <published>2021-04-25T05:50:48.000Z</published>
    <updated>2021-04-25T06:14:29.815Z</updated>
    
    
    <summary type="html">在离线条件下使用centos系统安装包来安装系统软件</summary>
    
    
    
    <category term="Linux" scheme="https://www.xding39.com/categories/Linux/"/>
    
    <category term="安装" scheme="https://www.xding39.com/categories/Linux/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="centos" scheme="https://www.xding39.com/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>信息的表示与处理</title>
    <link href="https://www.xding39.com/2021/04/24/%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA%E4%B8%8E%E5%A4%84%E7%90%86/"/>
    <id>https://www.xding39.com/2021/04/24/%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA%E4%B8%8E%E5%A4%84%E7%90%86/</id>
    <published>2021-04-24T10:26:33.000Z</published>
    <updated>2021-04-27T10:58:04.671Z</updated>
    
    
    <summary type="html">现代计算机存储和处理的信息以二值信号表示。这些微不足道的二进制数字，或者称为位(bit) ，形成了数字革命的基础。</summary>
    
    
    
    <category term="深入理解计算机系统" scheme="https://www.xding39.com/categories/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="信息表示" scheme="https://www.xding39.com/tags/%E4%BF%A1%E6%81%AF%E8%A1%A8%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>PCI总线设备</title>
    <link href="https://www.xding39.com/2021/04/24/PCI%E6%80%BB%E7%BA%BF%E8%AE%BE%E5%A4%87/"/>
    <id>https://www.xding39.com/2021/04/24/PCI%E6%80%BB%E7%BA%BF%E8%AE%BE%E5%A4%87/</id>
    <published>2021-04-24T07:39:00.584Z</published>
    <updated>2021-04-24T09:59:48.415Z</updated>
    
    
    <summary type="html">PCI总线设备驱动架构及示例</summary>
    
    
    
    <category term="Hardware" scheme="https://www.xding39.com/categories/Hardware/"/>
    
    <category term="驱动" scheme="https://www.xding39.com/categories/Hardware/%E9%A9%B1%E5%8A%A8/"/>
    
    
    <category term="PCI" scheme="https://www.xding39.com/tags/PCI/"/>
    
  </entry>
  
</feed>
